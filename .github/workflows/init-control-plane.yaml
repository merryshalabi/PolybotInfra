name: Init Kubernetes Control Plane

on:
  workflow_run:
    workflows: ["Provision Kubernetes Cluster Infrastructure"]
    types:
      - completed

jobs:
  init-control-plane:
    name: Initialize K8s Control Plane
    runs-on: ubuntu-latest

    env:
      CONTROL_PLANE_TAG_NAME: control-plane
      REGION: eu-west-2

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download IP artifact
      uses: actions/download-artifact@v4
      with:
        name: control-plane-ip

    - name: Load control plane IP
      run: |
        echo "CONTROL_PLANE_IP=$(cat control-plane-ip.txt)" >> $GITHUB_ENV
      


    - name: Save private key to file
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: Wait for EC2 to be ready (SSH)
      run: |
        echo "Waiting for SSH to become available on ${{ env.CONTROL_PLANE_IP }} ..."
        for i in {1..15}; do
          if ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ env.CONTROL_PLANE_IP }} 'echo "SSH is up!"'; then
            echo "SSH is ready"
            break
          else
            echo "Waiting ($i)..."
            sleep 10
          fi
        done

    - name: Upload init script to control plane instance
      run: |
        scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa scripts/init_control_plane.sh ubuntu@${{ env.CONTROL_PLANE_IP }}:/home/ubuntu/init_control_plane.sh

    - name: SSH into control plane and run script
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ env.CONTROL_PLANE_IP }} \
          'bash /home/ubuntu/init_control_plane.sh'
