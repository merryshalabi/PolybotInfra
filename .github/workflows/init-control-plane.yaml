name: Init Kubernetes Control Plane

on:
  workflow_run:
    workflows: ["Provision Kubernetes Cluster Infrastructure"]
    types:
      - completed

jobs:
  init-control-plane:
    name: Initialize K8s Control Plane
    runs-on: ubuntu-latest

    env:
      CONTROL_PLANE_TAG_NAME: control-plane
      REGION: eu-west-2

    steps:
    - name: Checkout code
      uses: actions/checkout@v4


    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.REGION }}

    - name: Get Control Plane IP from EC2 tag
      id: get-ip
      run: |
        echo "🔍 Finding public IP by tag..."
        CONTROL_PLANE_IP=$(aws ec2 describe-instances \
          --filters "Name=tag:Name,Values=${{ env.CONTROL_PLANE_TAG_NAME }}" "Name=instance-state-name,Values=running" \
          --query "Reservations[0].Instances[0].PublicIpAddress" \
          --output text)
        echo "✅ Found IP: $CONTROL_PLANE_IP"
        echo "CONTROL_PLANE_IP=$CONTROL_PLANE_IP" >> $GITHUB_ENV

    - name: Upload init script to control plane instance
      run: |
        scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa scripts/init_control_plane.sh ubuntu@$CONTROL_PLANE_IP:/home/ubuntu/init_control_plane.sh

    - name: Save private key to file
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: Upload init script to control plane instance
      run: |
        scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa scripts/init_control_plane.sh ubuntu@$CONTROL_PLANE_IP:/home/ubuntu/init_control_plane.sh

    - name: SSH into control plane and run script
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@$CONTROL_PLANE_IP \
          'bash /home/ubuntu/init_control_plane.sh'

